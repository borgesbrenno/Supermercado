/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany;

import com.mycompany.conexao.ConexaoDAO;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import com.mycompany.AreaDoCliente;
import com.mycompany.ProdutoCarrinho;
import java.text.SimpleDateFormat;
import java.util.Iterator;

/**
 *
 * @author silva
 */
public class TelaRelatorioSintetico extends javax.swing.JFrame {
    private List<ProdutoCarrinho> produtosCarrinho;
    private double valorTotal;
    private String cpfCliente;
    private Date dataCompra;
    private double valorGasto;

    public TelaRelatorioSintetico(List<ProdutoCarrinho> produtosCarrinho, double valorTotal) {
        this.produtosCarrinho = produtosCarrinho;
        this.valorTotal = valorTotal;
    }
    
    private Iterable<TelaRelatorioSintetico> resultados;


    
    /**
     * Creates new form TelaRelatorio
     */
    public TelaRelatorioSintetico() {
        initComponents();
        DefaultTableModel modelo = (DefaultTableModel) jtableReAnalitico.getModel();
    modelo.addColumn("Valor Gasto");
    modelo.addColumn("Cliente");
    modelo.addColumn("Data Compra");
    
    }

    public TelaRelatorioSintetico(String cpf, Date data) {
        
    }

    public TelaRelatorioSintetico(String string, java.sql.Date date, double aDouble) {
        
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtableReAnalitico = new javax.swing.JTable();
        btnConfirmar = new javax.swing.JButton();
        txtPesquisa = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Relatório de Vendas");

        jLabel1.setText("Barra de Pesquisa");

        jtableReAnalitico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jtableReAnalitico);

        btnConfirmar.setText("Confirmar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        jMenu1.setText("Relatório Analítico");

        jMenuItem1.setText("Relatório Analítico");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnConfirmar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPesquisa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnConfirmar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
       String pesquisa = txtPesquisa.getText();

    // Verifica se o campo de pesquisa não está vazio
    if (!pesquisa.isEmpty()) {
        // Aqui você deve chamar o método de busca passando o texto da pesquisa
        // Certifique-se de que seu método de busca no banco de dados está configurado
        // corretamente para lidar com esse parâmetro.
        List<TelaRelatorioSintetico> resultados = ConexaoDAO.buscarPorCliente(pesquisa);

        DefaultTableModel modelo = (DefaultTableModel) jtableReAnalitico.getModel();
        modelo.setRowCount(0);  // Limpa a tabela antes de adicionar novos resultados

        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy"); // Formatador de data

        for (TelaRelatorioSintetico resultado : resultados) {
            modelo.addRow(new Object[]{
                resultado.getCpfCliente(),
                dateFormat.format(resultado.getDataCompra()),
                resultado.getValorGasto(),
                // Adicione outras colunas conforme necessário
            });
        }
    } else {
        JOptionPane.showMessageDialog(this, "Digite um valor válido para pesquisa.");
    }
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
       TelaRelatorioAnalitico tela = new TelaRelatorioAnalitico();
                    tela.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaRelatorioSintetico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaRelatorioSintetico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaRelatorioSintetico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaRelatorioSintetico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaRelatorioSintetico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtableReAnalitico;
    private javax.swing.JTextField txtPesquisa;
    // End of variables declaration//GEN-END:variables

    private String getCpfCliente() {
    int selectedRow = jtableReAnalitico.getSelectedRow(); // Supondo que tabela é o nome do seu objeto JTable
    int cpfClienteColumnIndex = 0; // Substitua pelo índice da coluna que contém o CPF

    if (selectedRow != -1) {
        return jtableReAnalitico.getValueAt(selectedRow, cpfClienteColumnIndex).toString();
    }

    return null; // ou uma string padrão, dependendo do que você deseja
}

private String getDataCompra() {
    int selectedRow = jtableReAnalitico.getSelectedRow(); // Supondo que tabela é o nome do seu objeto JTable
    int dataCompraColumnIndex = 1; // Substitua pelo índice da coluna que contém a data de compra

    if (selectedRow != -1) {
        return jtableReAnalitico.getValueAt(selectedRow, dataCompraColumnIndex).toString();
    }

    return null; // ou uma string padrão, dependendo do que você deseja
}

private double calcularValorTotal() {
        double valorTotal = 0.0;

        for (ProdutoCarrinho produto : produtosCarrinho) {
            valorTotal += produto.getValor() * produto.getQuantidade();
        }

        return valorTotal;
    }
  
    public TelaRelatorioSintetico(String cpfCliente, Date dataCompra, double valorGasto) {
    this.cpfCliente = cpfCliente;
    this.dataCompra = dataCompra;
    this.valorGasto = valorGasto;
}

private double getValorGasto() {
    return valorGasto;
}

}
